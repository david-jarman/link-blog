@using LinkBlog.Abstractions
@using Microsoft.AspNetCore.Components
@using Microsoft.AspNetCore.Components.Authorization

@if (DisplayPost != null)
{
    <article class="post">
        <header>
            <div class="post-title">
                <h2>@DisplayPost.Title</h2>
                <AuthorizeView Policy="Admin">
                    <button class="edit-btn">
                        <svg xmlns="http://www.w3.org/2000/svg"
                            width="24"
                            height="24"
                            viewBox="0 0 24 24"
                            fill="none"
                            stroke="currentColor"
                            stroke-width="2"
                            stroke-linecap="round"
                            stroke-linejoin="round">
                            <path d="M12 20h9" />
                            <path d="M16.5 3.5a2.121 2.121 0 0 1 3 3L7 19l-4 1 1-4 12.5-12.5z" />
                        </svg>
                    </button>
                </AuthorizeView>
            </div>
            <div class="post-meta">
                Posted on <time datetime="@DisplayDate.ToString("yyyy-MM-dd")">@DisplayDateTime</time>
            </div>
        </header>
        <div class="post-content">
            @if (!string.IsNullOrWhiteSpace(DisplayPost.Link))
            {
                <p><a href="@DisplayPost.Link" target="_blank" rel="noopener noreferrer">@DisplayPost.LinkTitle</a></p>
            }

            <!-- The post contents can contain HTML tags for formatting. -->
            @((MarkupString)DisplayPost.Contents!)
        </div>
        <div class="post-tags">
            Tags: @foreach (var tag in DisplayPost.Tags)
            {
                <a href="/tags/@tag.Name" class="tag">@tag.Name</a>@(tag != DisplayPost.Tags.Last() ? ", " : "")
            }
        </div>
        <div class="post-links">
            <a href="/archive/@Year/@Month/@Day/@ShortTitle">#</a>
            /
            <a href="/archive/@Year">@Year</a>
            /
            <a href="/archive/@Year/@Month">@Month</a>
            /
            <a href="/archive/@Year/@Month/@Day">@Day</a>
        </div>
    </article>
}

@code {
    [Parameter]
    public Post? DisplayPost { get; set; }

    public DateTimeOffset DisplayDate;
    public string? DisplayDateTime;

    public string? Year;
    public string? Month;
    public string? Day;
    public string? ShortTitle;

    protected override void OnInitialized()
    {
        DateTimeOffset utcDateTime = DisplayPost!.CreatedDate;
        
        // Specify the target time zone (Pacific Standard Time)
        TimeZoneInfo pacificZone = TimeZoneInfo.FindSystemTimeZoneById("Pacific Standard Time");
        
        // Convert to the target time zone
        DisplayDate = TimeZoneInfo.ConvertTime(utcDateTime, pacificZone);
        DisplayDateTime = $"{DisplayDate:MMMM d}{GetDaySuffix(DisplayDate.Day)}, {DisplayDate:yyyy 'at' h:mmtt} PST";

        Year = DisplayDate.Year.ToString();
        Month = DisplayDate.Month.ToString();
        Day = DisplayDate.Day.ToString();
        ShortTitle = DisplayPost.ShortTitle;
    }

    private static string GetDaySuffix(int day)
    {
        return (day % 10 == 1 && day != 11) ? "st" :
               (day % 10 == 2 && day != 12) ? "nd" :
               (day % 10 == 3 && day != 13) ? "rd" : "th";
    }
}